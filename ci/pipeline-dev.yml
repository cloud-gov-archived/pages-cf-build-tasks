---
############################
#  SHARED

env-cf: &env-cf
  CF_API: https://api.fr.cloud.gov
  CF_USERNAME: ((((deploy-env))-cf-username))
  CF_PASSWORD: ((((deploy-env))-cf-password))
  CF_ORG: gsa-18f-federalist
  CF_SPACE: ((deploy-env))

cf-image: &cf-image
  platform: linux
  image_resource:
    type: registry-image
    source:
      repository: 18fgsa/concourse-task
      aws_access_key_id: ((ecr-aws-key))
      aws_secret_access_key: ((ecr-aws-secret))
      repository: harden-concourse-task
      aws_region: us-gov-west-1
      tag: ((harden-concourse-task-tag))

############################
#  JOBS

jobs:

  - name: set-pipeline
    serial: true
    plan:
      - get: src
        resource: pr-((git-branch))
        trigger: true
      - set_pipeline: build-container
        file: src/ci/pipeline-dev.yml
        instance_vars:
          deploy-env: ((deploy-env))
          git-branch: ((git-branch))

  - name: deploy-((deploy-env))
    plan:
      - get: src
        resource: pr-((git-branch))
        trigger: true
      - task: build
        privileged: true
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: concourse/oci-build-task
          inputs:
          - name: src
            path: .
          outputs:
          - name: image
          run:
            path: build
          params:
            BUILDKIT_SECRETTEXT_UA_TOKEN: ((ua-token))
      - put: image-repository-((deploy-env))
        params:
          image: image/image.tar
      - task: deploy
        config:
          <<: *cf-image
          inputs:
            - name: src
            - name: image-repository-((deploy-env))
          run:
            dir: src
            path: ci/tasks/deploy.sh
        params:
          <<: *env-cf
          CF_APP_NAME: pages-owasp-zap-task-((deploy-env))
          CF_MANIFEST: .cloudgov/manifest.yml
          CF_VARS_FILE: .cloudgov/vars/pages-((deploy-env)).yml
          IMAGE_REPOSITORY: ../image-repository-((deploy-env))/repository
          IMAGE_TAG: pages-((deploy-env))
          CF_DOCKER_USERNAME: ((ecr-aws-key))
          CF_DOCKER_PASSWORD: ((ecr-aws-secret))

    on_failure:
      in_parallel:
        - put: slack
          params:
            text: |
              :x: FAILED: pages build container deployment on ((deploy-env))
              <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
            channel: ((slack-channel))
            username: ((slack-username))
            icon_url: ((slack-icon-url))

  - name: report-success-((deploy-env))
    plan:
      - get: src
        resource: pr-((git-branch))
        trigger: true
        passed: [deploy-((deploy-env))]
    on_success:
      in_parallel:
        - put: slack
          params:
            text: |
              :white_check_mark: SUCCESS: Successfully deployed pages owasp zap task on ((deploy-env))
              <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
            channel: ((slack-channel))
            username: ((slack-username))
            icon_url: ((slack-icon-url))

############################
#  RESOURCES

resources:

  - name: pr-((git-branch))
    type: pull-request
    check_every: 1m
    source:
      repository: owasp-zap-task
      access_token: ((gh-access-token))
      base_branch: ((git-branch))
      disable_forks: true
      ignore_drafts: false

  - name: slack
    type: slack-notification
    source:
      url: ((slack-webhook-url))

  - name: image-repository-((deploy-env))
    type: registry-image
    source:
      aws_access_key_id: ((ecr-aws-key))
      aws_secret_access_key: ((ecr-aws-secret))
      repository: pages-owasp-zap-task
      aws_region: us-gov-west-1
      tag: pages-((deploy-env))

############################
#  RESOURCE TYPES

resource_types:

  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource

  - name: pull-request
    type: docker-image
    source:
      repository: teliaoss/github-pr-resource