---
############################
#  SHARED

env-cf: &env-cf
  CF_API: https://api.fr.cloud.gov
  CF_USERNAME: ((build-tasks-((deploy-env))-cf-username))
  CF_PASSWORD: ((build-tasks-((deploy-env))-cf-password))
  CF_ORG: gsa-18f-federalist
  CF_SPACE: build-tasks-((deploy-env))

############################
#  JOBS

jobs:

  - name: set-pipeline
    serial: true
    plan:
      - get: src
        resource: src-((deploy-env))-tagged
        trigger: true
      - set_pipeline: cf-build-tasks
        file: src/ci/pipeline-production.yml
        instance_vars:
          deploy-env: ((deploy-env))

  - name: deploy-((deploy-env))
    plan:
      - get: src
        resource: src-((deploy-env))-tagged
        trigger: true
        passed: [set-pipeline]
      - get: cf-image
      - get: python-image
      - task: common-test
        file: src/ci/partials/common-test.yml
        image: python-image
      - task: ls-tasks
        file: src/ci/partials/ls-tasks.yml
        image: cf-image
      - load_var: build-tasks
        file: src/build-tasks.json
      - across:
        - var: build-task
          values: ((.:build-tasks))
          max_in_flight: 20
        do:
        - task: build
          privileged: true
          config:
            platform: linux
            image_resource:
              type: registry-image
              source:
                repository: concourse/oci-build-task
            inputs:
            - name: src
              path: .
            outputs:
            - name: image
            run:
              path: build
            params:
              BUILD_ARG_TASK_FOLDER: tasks/((.:build-task))
              BUILD_ARGS_FILE: tasks/((.:build-task))/.env
              BUILDKIT_SECRETTEXT_UA_TOKEN: ((ua-token))
              DOCKERFILE: Dockerfile
        - task: tag-list
          file: src/ci/partials/tag-list.yml
          image: cf-image
          params:
            TAG: ((.:build-task))-((deploy-env))
        - put: image-repository
          params:
            image: image/image.tar # this might need output_mapping
            additional_tags: src/tag-list.txt
        - task: deploy
          file: src/ci/partials/deploy.yml
          image: cf-image
          params:
            <<: *env-cf
            CF_APP_NAME: pages-((.:build-task))-task-((deploy-env))
            CF_MANIFEST: .cloudgov/manifest.yml
            CF_VARS_FILE: .cloudgov/vars/pages-((deploy-env)).yml
            IMAGE_REPOSITORY: ../image-repository/repository
            IMAGE_TAG: ((.:build-task))-((deploy-env))
            CF_DOCKER_USERNAME: ((ecr-aws-key))
            CF_DOCKER_PASSWORD: ((ecr-aws-secret))
          on_failure:
            put: slack
            params:
              text: |
                :x: FAILED: pages-cf-build-tasks: ((.:build-task)) deployment on ((deploy-env))
                <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
              channel: ((slack-channel))
              username: ((slack-username))
              icon_url: ((slack-icon-url))
          on_success:
            put: slack
            params:
              text: |
                :white_check_mark: SUCCESS: Successfully deployed pages-cf-build-tasks: ((.:build-task)) on ((deploy-env))
                <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
              channel: ((slack-channel))
              username: ((slack-username))
              icon_url: ((slack-icon-url))


############################
#  RESOURCES

resources:
  - name: src-((deploy-env))-tagged
    type: git
    icon: github
    source:
      uri: https://github.com/cloud-gov/pages-cf-build-tasks.git
      branch: main
      commit_verification_keys: ((cloud-gov-pages-gpg-keys))
      tag_filter: 0.*.*
      fetch_tags: true

  - name: slack
    type: slack-notification
    source:
      url: ((slack-webhook-url))

  - name: image-repository
    type: registry-image
    source:
      aws_access_key_id: ((ecr-aws-key))
      aws_secret_access_key: ((ecr-aws-secret))
      repository: pages-cf-build-tasks
      aws_region: us-gov-west-1
      tag_regex: '*-((deploy-env))'

  - name: cf-image
    type: registry-image
    source:
      aws_access_key_id: ((ecr-aws-key))
      aws_secret_access_key: ((ecr-aws-secret))
      repository: general-task
      aws_region: us-gov-west-1
      tag: latest

  - name: python-image
    type: registry-image
    source:
      aws_access_key_id: ((ecr-aws-key))
      aws_secret_access_key: ((ecr-aws-secret))
      repository: pages-python-v3.11
      aws_region: us-gov-west-1
      tag: latest

############################
#  RESOURCE TYPES

resource_types:

  - name: slack-notification
    type: registry-image
    source:
      aws_access_key_id: ((ecr_aws_key))
      aws_secret_access_key: ((ecr_aws_secret))
      repository: slack-notification-resource
      aws_region: us-gov-west-1
      tag: latest

  - name: git
    type: registry-image
    source:
      aws_access_key_id: ((ecr_aws_key))
      aws_secret_access_key: ((ecr_aws_secret))
      repository: git-resource
      aws_region: us-gov-west-1
      tag: latest

  - name: registry-image
    type: registry-image
    source:
      aws_access_key_id: ((ecr_aws_key))
      aws_secret_access_key: ((ecr_aws_secret))
      repository: registry-image-resource
      aws_region: us-gov-west-1
      tag: latest
